#!/usr/bin/env zsh
# {{VERSION}}-{{COMMIT}}
# SPDX-FileCopyrightText: Â© 2023-25 David Parsons
# SPDX-License-Identifier: MIT

# Enable debug mode if DEBUG environment variable is set to any non-empty value
[[ -n "$DEBUG" ]] && set -x

# Define storage file location
DEFAULT_FILE="/Volumes/OPENCORE/EFI/OC/config.plist"
PLIST_FILE=${FILE:-$DEFAULT_FILE}

# Function to print usage information
print_usage() {
    cat << EOF
Usage: vmhide [options]
Options:
    -on            Enable VMHide
    -off           Disable VMHide
    -h             Print this help message
EOF
}

check_prefixes () {
    key=$1
    for prefix in OC4VM-VMM; do
        case $key in
            "$prefix"*) return 0
        esac
    done
    return 1
}

set_state() {
    local value="$1"
	count=$(plutil -extract Kernel.Patch raw -expect array -- "${PLIST_FILE}")
	for i in {1..$count}; do
		# $(($i - 1)) converts 1-based index to 0-based
		patch=$(plutil -extract Kernel.Patch.$((i - 1)).Comment raw -expect string -- "${PLIST_FILE}")
		if check_prefixes "$patch"; then
			echo Setting vmhide state $i: $value
			plutil -replace Kernel.Patch.$((i - 1)).Enabled -bool ${value} -- "${PLIST_FILE}"
			# plutil -extract Kernel.Patch.$((i - 1)).Enabled raw -expect bool -- "${PLIST_FILE}"
		else
			continue
		fi
	done
}

# Main logic
echo "OC4VM vmhide"
echo "------------"

if [ ! -f $PLIST_FILE ]; then
    echo "ERROR: $PLIST_FILE not found!"
    exit 1
fi

case "$1" in
    -h)
        print_usage
        ;;
    -on)
        set_state "true"
        ;;
    -off)
        set_state "false"
        ;;
    *)
        print_usage
        ;;
esac
